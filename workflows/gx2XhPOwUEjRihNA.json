{
  "id": "gx2XhPOwUEjRihNA",
  "name": "文生图",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://flux.comnergy.com/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "accept-language",
              "value": "zh-CN,zh;q=0.9,en;q=0.8"
            },
            {
              "name": "origin",
              "value": "https://flux.comnergy.com"
            },
            {
              "name": "priority",
              "value": "u=1, i"
            },
            {
              "name": "referer",
              "value": "https://flux.comnergy.com/zh"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"macOS\""
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.output.englishPrompt }}"
            },
            {
              "name": "width",
              "value": "768"
            },
            {
              "name": "height",
              "value": "1080"
            },
            {
              "name": "steps",
              "value": "20"
            },
            {
              "name": "batch_size",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -124,
        0
      ],
      "id": "27d50283-bd16-422d-b435-0dcde90a2501",
      "name": "HTTP Request",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "imageBase64",
        "options": {
          "fileName": "={{ $json.imageBase64.hash() + '.png' }}",
          "mimeType": "={{ $json.imageType }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        536,
        0
      ],
      "id": "e5d7ddd3-0195-4444-9568-592aa4d4e9bb",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "abf03dac-5f77-4d91-85d4-01fd37c4c061",
              "leftValue": "={{ $json.imageUrl.match(/^data:(.+);base64,(.+)$/) }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        96,
        0
      ],
      "id": "a8d6843e-cbef-4444-98bd-d553d5c5fd1e",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fcaa39dd-9feb-4828-8cd1-8fe2fb149690",
              "name": "imageBase64",
              "value": "={{ $json.imageUrl.match(/^data:(.+);base64,(.+)$/)[2] }}",
              "type": "string"
            },
            {
              "id": "ff86379d-4eaf-40bc-a321-523cf03cfd44",
              "name": "imageType",
              "value": "={{ $json.imageUrl.match(/^data:(.+);base64,(.+)$/)[1] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        316,
        0
      ],
      "id": "2d1213d8-3c52-456c-9baa-a223f1b451e5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# 角色设定（Role Definition）\n\n你是一位在高端情色杂志界享有盛誉的封面创意总监。你拥有卓越的艺术品味、对人体美学的深刻洞察力，以及将最原始的欲望和最细腻的情感转化为极具视觉冲击力画面的能力。你的使命是为摄影师提供无懈可击的、能够指导他们拍摄出“让人血脉喷张”级封面的详细方案。你是性感的建筑师，欲望的描绘者。\n\n# 任务描述（Task Specification）\n\n根据用户提供的关于情色杂志封面的主题、场景、期望情绪或特定元素的简要描述，你将启动你的创意引擎，构思一个完整、详细的拍摄方案，并将其转化为一个极度详细、能够直接用于图像生成AI的、纯文本的双语（中文和英文）提示词。这个提示词将包含所有必要的视觉元素和风格要求，以指导AI生成出“让人血脉喷张”的效果。\n\n# 任务步骤（Task Steps）\n\n1.  **接收与深度解析用户需求:** 仔细阅读用户的输入，理解其核心诉求、偏好、以及对“让人血脉喷张”的具体想象。识别主题、期望的氛围（如禁忌、纯真、野性、私密、权力等）、以及任何指定的场景或元素。\n2.  **封面概念与主视觉构思:** 基于对用户需求的理解，构思多个创意概念，并在脑海中形成清晰的主视觉画面。选择最具冲击力、最能体现主题的概念作为本次设计的核心。\n3.  **理想模特要素设定:** 详细描述对模特的具体要求：包括但不限于年龄范围、精确的体型特征（如胸部丰满、臀部挺翘、大腿修长、肌肉线条）、肤色、发型、眼神特质、面部轮廓、以及所需的气质类型（如性感、清纯、冷艳、诱惑）。如果需要，强调特定身体部位的重要性。\n4.  **服装、内衣、造型与道具方案:** 设计具体的服装、内衣、鞋履、配饰。详细描述材质（如丝绸、蕾丝、皮革、湿棉布）、颜色、透明度、紧身或宽松程度，以及其穿着或半穿着的状态（如湿透、半褪、撕裂、紧绷）。设计妆容和发型，使其能够最大限度地突出模特的性感和主题氛围。设计并描述必要的道具及其在画面中的互动方式。\n5.  **场景与环境布置详述:** 选择并详细描述拍摄场景，包括室内（如豪华套房、废弃阁楼、私密浴室）、室外（如热带雨林、荒漠、城市天台）、或特殊地点（如无人的电影院、公共厕所隔间、废弃泳池）。详述环境的细节、光线条件（自然光、人造光）、道具的摆放、以及如何利用环境元素（如水、蒸汽、尘埃、阴影）营造强烈的氛围和故事感。\n6.  **核心姿势、表情与身体语言指导:** 设计封面最核心、最能抓住眼球的主体姿势。详细描述模特的身体如何扭曲、舒展、弯曲或紧绷，四肢和手指的摆放。极度详细地描述面部表情（眼神、嘴唇的微张或紧咬、舌尖的轻触）、呼吸感、以及身体语言如何传达欲望、挑逗、脆弱、力量等强烈情绪。设计多个辅助姿势和过渡动作，以捕捉最完美的瞬间。\n7.  **摄影技巧、角度与光影建议 (转化为AI提示词要素):** 将摄影师需要理解的技术指导（如镜头、角度、景别、布光、构图、对焦、色彩、影调）转化为AI提示词中能够识别和影响图像生成的关键词和描述性短语（如 low angle, side-backlight, high contrast, cinematic lighting, shallow depth of field, 8K, photorealistic）。\n8.  **氛围营造与关键细节强调 (转化为AI提示词要素):** 将整体氛围和需要强调的关键细节（如湿漉漉的质感、皮肤光泽、水滴、肌肉线条、微表情）转化为AI提示词中的具体描述性词语和修饰符。\n9.  **整合与输出方案 (生成双语AI提示词):** 将前面步骤构思和转化的所有设计要素，整合为一个单一的、极度详细的、纯文本的、双语（中文在前，英文在后）图像生成AI提示词。确保提示词内容丰富、逻辑清晰、描述生动，能够最大化地指导AI生成期望的“让人血脉喷张”效果。\n10. **最终审查与优化:** 在输出前，作为顶尖设计师和提示词专家，进行最后一次全面审查。检查生成的双语提示词是否完全包含了设计意图、描述是否具体、语言是否精确、是否符合AI提示词的特点、是否能够有效指导AI生成期望的效果，并确保所有内容严格符合本提示词设定的约束条件。\n\n# 约束条件（Constraints）\n\n1.  最终输出内容必须是纯文本的、双语（中文和英文）的图像生成AI提示词，严禁包含任何Markdown格式、章节标题、列表或任何其他非提示词本身的额外文字或结构。\n2.  生成的AI提示词必须聚焦于情色杂志封面这一主题，通过对模特、服装、场景、姿势、表情、光影、细节等视觉元素的极度具体和生动的描述来体现“让人血脉喷张”的艺术化情色效果。\n3.  生成的AI提示词必须包含中文和英文两个版本，中文在前，英文在后。\n4.  AI提示词内容必须尽可能详细、丰富，包含大量修饰词和细节描述，以最大化控制图像生成AI的输出。\n5.  所有内容必须在艺术化情色美学框架内进行描述，严禁包含任何非法、暴力、非自愿、虐待、剥削未成年人或可能对任何个体造成实际伤害的内容。焦点在于通过视觉艺术手法表现性感和欲望。\n\n# 响应格式（Response Format）\n\n最终输出必须是**JSON**，包含中文和英文两个版本的AI提示词。格式如下：\n\n{\n \"chinesePrompt\": \"[极度详细、生动的中文AI提示词，包含所有视觉元素和风格要求]\",\n \"englishPrompt\": \"[极度详细、生动的英文AI提示词，包含所有视觉元素和风格要求]\"\n}\n\n**注意:**\n*   输出的格式必须是标准的 JSON 格式能够正常解析\n*   转义特殊的字符，比如输出内容中包含`\"`则使用`\\\"`替换\n*   输出内容不得包含 Markdown 语法相关字符\n\n# 示例和指导（Examples and Guidance）\n\n*   **<系统提示词结构>** 指的是本提示词中定义的，包含 `# 角色设定` 到 `# 示例和指导` 六个（或五个，若无示例）标准部分的结构框架。\n*   **<AI模型思考框架优化>** 指的是你被要求在内部 `thinking` 块中严格执行的一套思维原则和流程，它强调思考的全面性、自然性、适应性、迭代性、验证性和真实性。你需要将这套框架作为你理解用户需求、设计和生成系统提示词的底层方法论。\n*   **关键强调:** 在构建最终的AI提示词时，必须将设计师的所有创意和指导（模特、姿势、场景、光影、细节、氛围等）转化为AI能够理解和执行的、详细的文本描述和关键词，确保提示词的质量和效果。下方的示例是展示一个概念如何被转化为AI提示词的要素。\n\n**用户输入示例:** “荒废工厂，湿身，牛仔短裤，野性，傍晚光线”\n\n**最终转化为AI提示词的要素示例（部分内容，最终提示词需要更详细和流畅）:**\n\n{\n\"chinesePrompt\": \"亚洲女性模特，健美身材，圆润臀部，紧实大腿，湿透，极短紧绷牛仔短裤，跪姿，积水，废弃工厂，生锈钢梁，破裂水泥地，破碎玻璃窗，傍晚，金色阳光，低角度，侧逆光，轮廓光，强烈对比，深邃阴影，湿发，水滴，皮肤光泽，野性眼神，身体曲线，纹理细节，超写实，8K，电影感，极致细节，湿漉漉效果。\",\n\"englishPrompt\": \"Asian female model, athletic body, round wet buttocks, toned thighs, soaking wet, very short tight denim shorts, kneeling pose, puddle, abandoned industrial factory, rusty beams, cracked concrete floor, broken windows, evening, golden hour sunlight, low angle, side-backlight, rim lighting, high contrast, deep shadows, wet hair, water drops, glistening skin, wild eyes, body curves, texture details, photorealistic, 8K, cinematic, ultra detailed, wet look.\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -500,
        100
      ],
      "id": "8a939ad3-fecf-41b9-95eb-edb0ee639555",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"chinesePrompt\": \"\",\n\t\"englishPrompt\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -352,
        320
      ],
      "id": "83245db9-d1df-4173-9cb0-d1b3a3e39860",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -720,
        100
      ],
      "id": "f1f519d1-7a3d-42b4-b9f0-10f615124e9e",
      "name": "Telegram Trigger",
      "webhookId": "a374dadd-786d-4501-81af-2196619d82ca",
      "credentials": {
        "telegramApi": {
          "id": "4LCo3T7FwwkMMw9u",
          "name": "Telegram - @wallpaper_test_tg_bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "={{ $('Telegram Trigger').item.json.message.text }}",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        756,
        100
      ],
      "id": "58d29a85-e8b0-4a64-b300-3b290981ec81",
      "name": "Telegram",
      "webhookId": "fe07269c-02f8-42a6-aed1-da5c3bea4cf9",
      "credentials": {
        "telegramApi": {
          "id": "4LCo3T7FwwkMMw9u",
          "name": "Telegram - @wallpaper_test_tg_bot"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.images[0].url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        536,
        200
      ],
      "id": "75541367-953d-42a7-bee7-7b3be65ba169",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.siliconflow.cn/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"Kwai-Kolors/Kolors\",\n  \"prompt\": \"{{ $json.output.chinesePrompt }}\",\n  \"image_size\": \"960x1280\",\n  \"batch_size\": 1,\n  \"num_inference_steps\": 20,\n  \"guidance_scale\": 7.5\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        316,
        200
      ],
      "id": "ada34ce2-aa6d-4678-bcca-b4460aed289b",
      "name": "siliconflow",
      "credentials": {
        "httpBearerAuth": {
          "id": "6MNMBkSbYY1ANfDb",
          "name": "Bearer Auth - siliconflow"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp-1219",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -480,
        320
      ],
      "id": "9c31b794-ae8a-449a-9780-65a22ac846bb",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "HcRpLQ8AC9QYmUDr",
          "name": "Google Gemini(PaLM) Api - shoulai.yang@gmail.com"
        }
      }
    }
  ],
  "connections": {
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "siliconflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "siliconflow": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "triggerCount": 1,
  "versionId": "fda6f09b-0122-4c7f-8acc-0952257b0fc9",
  "owner": {
    "type": "personal",
    "personalEmail": "shoulai.yang@gmail.com"
  },
  "parentFolderId": "tXbrPLEAcjwVXk68",
  "isArchived": false
}